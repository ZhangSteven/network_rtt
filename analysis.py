# coding=utf-8
# 
# Read log file generated by rtt.py, to find out RTT time information.
# 

from utils.iter import numElements
import logging
logger = logging.getLogger(__name__)



def readLine(file):
	"""
	[String] file => [String] line (yield one line at a time)

	This is a generator function which reads one line from a file at a time.
	"""
	with open(file) as f:
		for line in f:
			yield line



def infoLine(line):
	"""
	[String] line => [Bool] is the line start with "INFO"
	"""
	try:
		return (line[0:4] == 'INFO')
	except:
		return False



def httpStatus200(line):
	"""
	[String] line => [Bool] does the line contain HTTP status code 200
	Assumption: this line is a "INFO" line.
	
	A typical line recording HTTP response looks like:

	INFO 2019-03-03 11:29:04,531 rtt | 200,2019-03-03 11:29:04.511230,1,0.02,response 1
	"""
	try:
		return (line.split('|')[1].split(',')[0].strip() == '200')
	except:
		logger.exception('httpStatus200(): {0}'.format(line))
		return False



def correctResponse(line):
	"""
	[String] line => [Bool] does line contain correct response
	Assumption: this line contains http 200 status code.
	
	A typical line recording HTTP response looks like:

	INFO 2019-03-03 11:29:04,531 rtt | 200,2019-03-03 11:29:04.511230,1,0.02,response 1

	If the request number is "1", and the response is "response 1", then
	it's a correct response
	"""
	try:
		requestNum = line.split('|')[1].split(',')[2]
		if ('response ' + requestNum == line.split('|')[1].split(',')[4].strip()):
			return True
		else:
			return False

	except:
		logger.exception('httpStatus200(): {0}'.format(line))
		return False



if __name__ == '__main__':
	import logging.config
	logging.config.fileConfig('logging.config', disable_existing_loggers=False)

	

